from pprint import pprint
from datetime import date
from telebot import types
from colorama import init, Fore
from colorama import Style

from API.get_API import get_api
from API.get_lat import latitude_and_longitude
from API.get_forecast import forecast
from config import dict_form_eng_to_rus, TOKEN, MASSAGE_START
from API.get_all_info import get_result
from API.for_DB import put_to_db, how_many_spins, minus_spin, check_users
import telebot


API = TOKEN
bot = telebot.TeleBot(API)
city=""
dct_user={
    "free spin":True,
    'wait_cite':False,
    'wait_name':False,
    'name': "",
}

def get_forecast(cite:str):
    what_city = cite

    api = get_api(what_city)

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    miron = latitude_and_longitude(api)


    if miron != "Error":
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –¥–µ–Ω—å
        latitude, longitude = miron
        current_date = date.today()
        current_date_2 = current_date
        current_date_2 = str(current_date_2)
        current_date_2 = current_date_2.replace("-", "")

        forecast_2 = forecast(current_date_2, latitude, longitude)

        result = get_result(forecast_2, current_date, dict_form_eng_to_rus)
        return result
    else:
        return "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏."




@bot.message_handler(commands=["start"])  # –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
def start(message):
    create_or_not=check_users(message.from_user.id)
    if create_or_not:
        result = put_to_db(message.from_user.id)
        table = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –ø–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –ø–æ–ª—è
        item_1 = types.KeyboardButton("‚òÄÔ∏è–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã.‚òÅÔ∏èÔ∏è")  # –ø–æ–ª—É—á–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤ —Ç–µ–ª–µ–≥–µ
        item_2 = types.KeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        table.add(item_1)  # –¥–µ–ª–∞–µ–º –∏—Ö —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∏–µ—Ä–∞—Ä—Ö–∏–∏
        table.add(item_2)
        mes=MASSAGE_START.format(username=message.from_user.first_name)  # –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –±–æ—Ç
        bot.send_message(message.chat.id, mes, reply_markup=table)  # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–±–ª–∏—Ü–µ–π
    else:
        table = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –ø–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –ø–æ–ª—è
        item_1 = types.KeyboardButton("‚òÄÔ∏è–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã.‚òÅÔ∏èÔ∏è")  # –ø–æ–ª—É—á–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤ —Ç–µ–ª–µ–≥–µ
        item_2 = types.KeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        table.add(item_1)  # –¥–µ–ª–∞–µ–º –∏—Ö —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∏–µ—Ä–∞—Ä—Ö–∏–∏
        table.add(item_2)
        mes=MASSAGE_START.format(username=message.from_user.first_name)  # –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –±–æ—Ç
        bot.send_message(message.chat.id, mes, reply_markup=table)  # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–±–ª–∏—Ü–µ–π

@bot.message_handler(content_types=['text'])
def get_forecast_for_today(message):
    user_message = message.text
    if user_message == "‚òÄÔ∏è–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã.‚òÅÔ∏èÔ∏è":
        count=how_many_spins(message.from_user.id)
        if count>0:
            mes = "üèòÔ∏è–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –≥–æ—Ä–æ–¥üèòÔ∏è: "
            bot.send_message(message.chat.id, mes)
            minus_spin(message.from_user.id)
            dct_user['wait_cite']= True
        else:
            bot.send_message(message.chat.id, "–£–ø—Å, —É –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ñ—Ä–∏ —Å–ø–∏–Ω—ã. –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º-–∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.")
    elif user_message == "‚òÅÔ∏è‚ö°üí¶–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã?‚òÅÔ∏è‚ö°üí¶":
        count=how_many_spins(message.from_user.id)
        if count>0:
            mes = "üèòÔ∏è–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –≥–æ—Ä–æ–¥üèòÔ∏è: "
            bot.send_message(message.chat.id, mes)
            minus_spin(message.from_user.id)
            dct_user['wait_cite']= True
        else:
            bot.send_message(message.chat.id, "–£–ø—Å, —É –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ñ—Ä–∏ —Å–ø–∏–Ω—ã. –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º-–∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.")
    elif user_message == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
        bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è: ")
        dct_user['wait_name']=True
    else:
        if dct_user["wait_cite"]:
            table = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item_1 = types.KeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            item_2 = types.KeyboardButton("‚òÅÔ∏è‚ö°üí¶–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã?‚òÅÔ∏è‚ö°üí¶")
            table.add(item_2, item_1)
            city = message.text
            result = get_forecast(city)
            bot.send_message(message.chat.id, result, reply_markup=table)
            dct_user["wait_cite"]=False
        elif dct_user["wait_name"]:
            dct_user['name']=user_message
            put_to_db(message.from_user.id, users_name=user_message, registration=True)
            dct_user["wait_name"]=False
            bot.send_message(message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)))')
        else:
            bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é')




if __name__ == "__main__":
    print(Fore.LIGHTYELLOW_EX + Style.BRIGHT + "–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.")
    bot.polling(none_stop=True)